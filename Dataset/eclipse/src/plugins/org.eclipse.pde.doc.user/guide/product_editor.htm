<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<title>Product Editor</title>
</head>

<body>
<h2>Product Editor </h2>
<p>The product editor is the one-stop shop where you can define all aspects of 
  your product from basic definition to branding.</p>
<p>Because we just created a product configuration based on the RCP template, 
  most of the product information has already been filled out by PDE based on 
  the plugin.xml of the <em>com.example.xyz</em> plug-in.</p>
<p align="center"><img src="images/product-overview.PNG" alt="Product Overview Page"></p>
<p align="left">The Product Definition section is where the product ID and name 
  are specified, as well as the application that will run when the product is 
  launched.</p>
<p align="left">In this example, we will create a plugin-based product.</p>
<p align="left">The <strong>Testing</strong> and <strong>Exporting</strong> sections 
  should look familiar to the user as they are very similar to sections on the 
  <strong>Overview</strong> page of the plug-in editor.</p>
<p align="left">A very noticeable difference however is the first step in the 
  Testing section: <em>Synchronize this configuration with the product's defining 
  plug-in</em>. What does this mean?</p>
<p align="left">Remember that the product configuration is for PDE use only and 
  is not interpreted nor read by the runtime. Some of the data that enter in this 
  file (e.g. product ID, application, window images, about image, etc.) must be 
  copied to the plugin.xml file of your branding plug-in for these changes to 
  take <strong>real</strong> effect at runtime. That's what the synchronize action 
  does. It makes sure your plugin.xml contains up-to-date data and in sync with 
  the product configuration.</p>
<p align="center"><img src="images/product-configuration-plugins.PNG" alt="Product Configuration"></p>
<p align="left">The Configuration page is where you list all the plug-ins and 
  fragments that constitute the product.</p>
<p align="left">A configuration file is a property file containing system properties 
  read by the runtime upon startup. It is recommended to let PDE generate a default 
  config.ini file for you.</p>
<p align="left">You can also specify the program arguments and VM argumens with 
  which your product is to be launched.</p>
<p align="left">For a list of program and VM properties, refer to the <a href="../../org.eclipse.platform.doc.isv/reference/misc/runtime-options.html">Runtime 
  options</a> document.</p>
<p align="center"><img src="images/product-branding.PNG" alt="Product Branding"></p>
<p align="left">The <strong>Branding</strong> page is where the product is given 
  its identity: launcher name, custom images, custom launcher icons, splash screen 
  and About dialog.</p>
<p align="left">Name the executable that will launch your product <em>rcpmail</em>.</p>
<p align="left">Customizing the launcher icons varies per platform. In this example, 
  we will leave the default Eclipse icon as-is.</p>
<p align="left">The splash screen must be named 'spash.bmp' and is assumed to 
  be at the root of the product's defining plug-in if its location is not specified. 
  In our example, the RCP mail plug-in project does have a splash.bmp at the right 
  location, so the field can remain empty.</p>
<p align="left">More customization can be done to the window images and the About 
  dialog. All that data is already filled out by PDE using the plugin.xml of the 
  <em>com.example.xyz</em> plug-in.</p>
</body>
</html>
