<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML>
<HEAD>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<title>Configuring PDE</title>
</head>

<BODY BGCOLOR="#ffffff">

<h2><font size="5">Concepts</font></h2>
<h2>Host vs. runtime</h2>
<p>One of the most important concepts in PDE to understand is that of <b>host</b>
and <b>runtime</b>   workbench instances.  </p>
<p>When you start up the workbench, you
will use it to work on your projects that define the plug-ins you are
building.&nbsp; The workbench&nbsp;instance that you are running as you develop
your
plug-in using the PDE and other tools is the <b>host</b> instance. The features available in this instance will
come exclusively from the plug-ins that are installed with your application.</p>
<p> Once you are
happy with your plug-in and want to test it, you can launch another workbench instance,
the <b>runtime</b> instance. This instance will contain the same
plug-ins as the <b>host</b> instance, but will also have the plug-ins you were
working on in the <b>host</b> instance. PDE launcher will take care of&nbsp;merging your
plug-ins with the host plug-ins and creating the run-time instance.</p>

<h2><b>Target Platform</b></h2>
<p>Target Platform refers to the Eclipse product against which the plug-ins you 
are developing will be compiled and tested.&nbsp; The Target Platform must 
therefore be the same platform in which you plan to deploy your plug-ins.</p>
<p>The location of the target platform is set on the <b>Plug-in Development &gt; 
Target Platform</b> preference page.&nbsp; By default, the target platform is 
the same as the platform you are using for development, but this is not 
required.&nbsp; You can set the target platform to whatever Eclipse-based 
product you want.&nbsp; For example, if you want to take advantage of the latest 
and greatest Eclipse 3.0 features to develop for plug-ins that will be deployed 
in a product based on a 2.x Eclipse, you can use Eclipse 3.0 as your development 
platform and a 2.x-based product as your target platform.</p>
<p>&nbsp;</p>
<p align="center">
<img border="0" src="images/preferences.png" alt="PDE preferences - &quot;Target Platform&quot; page" ></p>
<p align="left">&nbsp;</p>
<p align="left">All the plug-ins found in the target platform location specified 
by the user are listed on the preference page.&nbsp; However, only the plug-ins 
that are explicitly checked constitute the target platform; the rest are ignored 
by PDE.&nbsp; By default, all plug-ins are checked.</p>
<h2>External vs. workspace plug-ins</h2>
<p>When developing Eclipse plug-ins, the set of plug-ins that you will be used 
to run the runtime workbench come from two distinct places: the workspace of the 
host instance and the target platform.&nbsp; Although, to PDE, all plug-ins are 
the same no matter where they come from, there are a few differences that 
quickly become evident to users.</p>
<ul>
  <li><b>Workspace plug-ins</b> are those plug-ins under development in your host 
    workbench.&nbsp; They are under your control and can be added, deleted and 
    modified by the user.</li>
  <li><b>External plug-ins</b> are plug-ins that arrived with the basic platform 
    installation and are simply referenced from their original location without 
    modification. You can reference them, browse them, view their source and debug 
    them, but they are read-only.&nbsp;</li>
</ul>
</body>

</html>