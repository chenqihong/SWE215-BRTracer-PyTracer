<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>Building a team UI</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<h2>
   Building a team UI
</h2><p>
   The team UI plug-in is based on the philosophy that the team subsystem should
   provide simple hooks and slots for providers to add their UI
   implementation.&nbsp; Rather than define standard team operations, the team
   plug-in leaves the workflow up to the provider implementation.&nbsp; The team
   UI implements a few standard wizards and dialog pages that providers can
   enhance, such as the project configuration wizard, the project set export
   dialog, and the preferences for file types and ignored files.&nbsp; More
   importantly, it also defines a
   &quot;Team&quot; slot for actions and preferences that serve as a single
   point of integration for UI contributed by provider's.&nbsp; In this way, the
   user learns where to find all team related function.
</p>
<p>To build a team UI, you must start with basic design work.&nbsp; Identify the actions that your
repository supports and in what views and editors these actions should be accessible.&nbsp; The implementation for your UI is done with the <a href="workbench_basicext.htm">standard
workbench extension points</a>.&nbsp; In addition, you can define your own
preferences which plug in to the standard framework.&nbsp; You may even need to
build your own views to present repository specific information and operations.
(The CVS client implements its own views for synchronizing with the repository
and navigating the repository.)
</p>
<p>In short, building a team UI involves knowledge of a few team-specific UI
classes, but is mostly accomplished using workbench UI design and development
principles.
</p>





</BODY>
</HTML>
