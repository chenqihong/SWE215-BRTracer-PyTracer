<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <meta http-equiv="Content-Style-Type" content="text/css">
    <title>
      Parameters page
    </title>
    <link rel="stylesheet" href="../book.css" charset="ISO-8859-1" type="text/css">
  </head>
  <body>
    <h1>
      Parameters page
    </h1>
    <img src="../images/tasks-170a.png"  alt="Parameters Page for the Rename Field Refactoring Command"> 
    <p>
      Parameters Page for the Rename Field Refactoring Command
    </p>
    <ul>
      <li>
        In the <strong>Enter new name</strong> text field, type a new name for the field that you're renaming.
      </li>
      <li>
        If you do not want to update references to the renamed field, deselect the&nbsp;<strong>Update references to the renamed element</strong> checkbox.
      </li>
      <li>
        If you want to update textual references in strings and comments which are referring to the renamed field, select the&nbsp;<strong>Update textual matches in comments and strings</strong> checkbox.
      </li>
      <li>
        If the refactoring finds accessor (getter/setter) methods to the field you're renaming, it offers you to rename them as well (and update all references to them): 
        <ul>
          <li>
            If you want to rename the getter, select the <strong>Rename Getter</strong> checkbox
          </li>
          <li>
            If you want to rename the setter, select the <strong>Rename Setter</strong> checkbox
          </li>
        </ul>
      </li>
      
  <li> Click <strong>OK</strong> to perform a quick refactoring, or click&nbsp;<strong>Preview</strong> 
    to perform a controlled refactoring. </li>
    </ul>
    
<strong>Note:</strong> The refactoring detects getters / setters using preferences 
set on <strong>Window &gt; Preferences &gt; Java &gt; Code Style</strong> 
preference page. <br>
<strong>Note:</strong> References in Javadoc comments, regular comments and string 
literals are updated based on textual matching. It is recommended that you perform 
a controlled refactoring and review the suggested changes if you select one of 
these options. 
<p>
      Related Topics:
    </p>
    <ul>
      <li>
        <a href="tasks-82.htm">See Refactoring without Preview</a>
      </li>
      <li>
        <a href="tasks-83.htm">See Refactoring with Preview</a>
      </li>
    </ul>
    
  </body>
</html>

