<?xml version="1.0" encoding="UTF-8"?>
<project name="org.eclipse.ant.core" default="build.jars" basedir=".">

	<property name="basews" value="${ws}"/>
	<property name="baseos" value="${os}"/>
	<property name="basearch" value="${arch}"/>
	<property name="basenl" value="${nl}"/>

	<!-- Compiler settings. -->
	<property name="javacFailOnError" value="false"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="true"/>
	<property name="javacSource" value="1.3"/>
	<property name="javacTarget" value="1.2"/>
	<property name="compilerArg" value=""/>
	<path id="path_bootclasspath">
		<fileset dir="${java.home}/lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	<property name="bootclasspath" refid="path_bootclasspath"/>

	<target name="init" depends="properties">
		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="pluginTemp" value="${basedir}"/>
		<condition property="build.result.folder" value="${pluginTemp}/org.eclipse.ant.core">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="build.result.folder" value="${basedir}"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>

	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: org.eclipse.ant.core for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<zip destfile="${plugin.destination}/org.eclipse.ant.core_3.1.0.jar" basedir="${temp.folder}/org.eclipse.ant.core_3.1.0" filesonly="false" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="@dot" depends="init" unless="@dot" description="Create jar: org.eclipse.ant.core @dot.">
		<delete dir="${temp.folder}/@dot.bin"/>
		<mkdir dir="${temp.folder}/@dot.bin"/>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/@dot.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" source="${javacSource}" target="${javacTarget}"		>
			<compilerarg line="${compilerArg}"/>
			<classpath>
				<pathelement path="${build.result.folder}/../org.eclipse.core.variables/@dot"/>
				<pathelement path="${build.result.folder}/../org.eclipse.core.runtime/@dot"/>
				<pathelement path="${build.result.folder}/../org.eclipse.osgi/@dot"/>
				<pathelement path="../org.apache.ant/lib/ant.jar"/>
				<pathelement path="../org.apache.ant/lib/ant-launcher.jar"/>
			</classpath>
			<src path="src/"			/>
			</javac>
		<!-- Copy necessary resources -->
		<copy todir="${temp.folder}/@dot.bin" failonerror="true" overwrite="false">
			<fileset dir="src/" excludes="**/*.java, **/package.htm*,null"			/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<copy todir="${build.result.folder}/@dot" failonerror="true" overwrite="false">
			<fileset dir="${temp.folder}/@dot.bin"			/>
		</copy>
		<delete dir="${temp.folder}/@dot.bin"/>
	</target>

	<target name="src.zip" depends="init" unless="src.zip">
		<mkdir dir="${build.result.folder}"/>
		<zip destfile="${build.result.folder}/src.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="src/" includes="**/*.java"			/>
		</zip>
	</target>

	<target name="lib/antsupportlib.jar" depends="init" unless="lib/antsupportlib.jar" description="Create jar: org.eclipse.ant.core lib/antsupportlib.jar.">
		<delete dir="${temp.folder}/lib/antsupportlib.jar.bin"/>
		<mkdir dir="${temp.folder}/lib/antsupportlib.jar.bin"/>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/lib/antsupportlib.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" source="${javacSource}" target="${javacTarget}"		>
			<compilerarg line="${compilerArg}"/>
			<classpath>
				<pathelement path="${build.result.folder}/../org.eclipse.core.variables/@dot"/>
				<pathelement path="${build.result.folder}/../org.eclipse.core.runtime/@dot"/>
				<pathelement path="${build.result.folder}/../org.eclipse.osgi/@dot"/>
				<pathelement path="${build.result.folder}/@dot"/>
				<pathelement path="${build.result.folder}/../org.eclipse.ant.core/@dot"/>
				<pathelement path="../org.apache.ant/lib/ant.jar"/>
				<pathelement path="../org.apache.ant/lib/ant-launcher.jar"/>
			</classpath>
			<src path="src_ant/"			/>
			</javac>
		<!-- Copy necessary resources -->
		<copy todir="${temp.folder}/lib/antsupportlib.jar.bin" failonerror="true" overwrite="false">
			<fileset dir="src_ant/" excludes="**/*.java, **/package.htm*,null"			/>
		</copy>
		<mkdir dir="${build.result.folder}/lib"/>
		<jar destfile="${build.result.folder}/lib/antsupportlib.jar" basedir="${temp.folder}/lib/antsupportlib.jar.bin"/>
		<delete dir="${temp.folder}/lib/antsupportlib.jar.bin"/>
	</target>

	<target name="lib/antsupportlibsrc.zip" depends="init" unless="lib/antsupportlibsrc.zip">
		<mkdir dir="${build.result.folder}/lib"/>
		<zip destfile="${build.result.folder}/lib/antsupportlibsrc.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="src_ant/" includes="**/*.java"			/>
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: org.eclipse.ant.core.">
		<available property="@dot" file="${build.result.folder}/@dot"/>
		<antcall target="@dot"/>
		<available property="lib/antsupportlib.jar" file="${build.result.folder}/lib/antsupportlib.jar"/>
		<antcall target="lib/antsupportlib.jar"/>
	</target>

	<target name="build.sources" depends="init">
		<available property="src.zip" file="${build.result.folder}/src.zip"/>
		<antcall target="src.zip"/>
		<available property="lib/antsupportlibsrc.zip" file="${build.result.folder}/lib/antsupportlibsrc.zip"/>
		<antcall target="lib/antsupportlibsrc.zip"/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0"/>
		<copy todir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0" failonerror="true" overwrite="false">
			<fileset dir="${build.result.folder}" includes="lib/antsupportlib.jar,null"			/>
		</copy>
		<copy todir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0" failonerror="true" overwrite="false">
			<fileset dir="${build.result.folder}/@dot" includes="**"			/>
		</copy>
		<copy todir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0" failonerror="true" overwrite="false">
			<fileset dir="${basedir}" includes="plugin.xml,plugin.properties,about.html,null,lib/*.jar,META-INF/,about_files/"			/>
		</copy>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0"/>
		<copy file="${build.result.folder}/src.zip" todir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0" failonerror="false" overwrite="false"/>
		<mkdir dir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0/lib"/>
		<copy file="${build.result.folder}/lib/antsupportlibsrc.zip" todir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0/lib" failonerror="false" overwrite="false"/>
		<copy todir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0" failonerror="false" overwrite="false">
			<fileset dir="${basedir}" includes="about.html,schema/,about_files/"			/>
		</copy>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0"/>
		<copy file="${temp.folder}/@dot.bin.log" todir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0" failonerror="false" overwrite="false"/>
		<mkdir dir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0/lib"/>
		<copy file="${temp.folder}/lib/antsupportlib.jar.bin.log" todir="${destination.temp.folder}/org.eclipse.ant.core_3.1.0/lib" failonerror="false" overwrite="false"/>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: org.eclipse.ant.core of all the zips, jars and logs created.">
		<delete dir="${build.result.folder}/@dot"/>
		<delete file="${build.result.folder}/src.zip"/>
		<delete file="${build.result.folder}/lib/antsupportlib.jar"/>
		<delete file="${build.result.folder}/lib/antsupportlibsrc.zip"/>
		<delete file="${plugin.destination}/org.eclipse.ant.core_3.1.0.jar"/>
		<delete file="${plugin.destination}/org.eclipse.ant.core_3.1.0.zip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="/builds/I/src/plugins/org.eclipse.ant.core" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: org.eclipse.ant.core.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log"			/>
		</delete>
		<zip destfile="${plugin.destination}/org.eclipse.ant.core_3.1.0.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

</project>
