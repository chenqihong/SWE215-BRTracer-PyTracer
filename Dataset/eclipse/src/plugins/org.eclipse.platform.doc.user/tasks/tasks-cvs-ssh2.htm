<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >

  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="Content-Type">
  <meta content="text/css" http-equiv="Content-Style-Type">
  <link type="text/css" charset="ISO-8859-1" href="../book.css"
 rel="STYLESHEET">
  <title>Connecting and configuring CVS with SSH</title>
  <meta content="team" name="keyword">
</head>
<body style="background-color: rgb(255, 255, 255);">
<h1 class="Head">Connecting and configuring CVS with SSH</h1>
<p>Eclipse includes an SSH client for accessing a remote CVS server.
The
client supports both the SSH1 and SSH2 protocol versions. To use SSH2
with a CVS repository select the <span style="font-weight: bold;">extssh</span>
connection type. </p>
<p>Different methods can be used to authenticate, 
  depending on the level of functionality and security you want. User authentication 
  methods used by the client by default are, in the following order: public-key, 
  Keyboard-Interactive, and password authentication.</p>
<h2>Authentication with Public Keys (keypair)</h2>
<p> Public-key authentication allows you to connect to a remote CVS server without 
  sending your password over the wire. This is a more secure authentication method 
  than password authentication. Public-key authentication uses two keys, a private 
  key that only you have--it should be kept in a secure place and protected with 
  a password. And the public key, which is placed on the server you wish to gain 
  access to.</p>
<p>
  Eclipse supports generating both keys and you can copy the public key to the 
  server from within Eclipse. In order to use public key authentication follow 
  these steps:</p>
<ol>
  <li>
    <p>If you already have a private/public key for the CVS server, simply open 
      the <span style="font-weight: bold;">Team &gt; CVS &gt;&nbsp; SSH2 Connection 
      Method</span> preference page and on the <span
 style="font-weight: bold;">General </span>tab add your private key to the list 
      by selecting the <span style="font-weight: bold;">Add Private Key</span> 
      button. Your key will be used when authenticating.</p>
  </li>
  <li>
    <p>If you don't have a keypair yet, in the preferences page, go to the <span style="font-weight: bold;">Key 
      Management</span> page.</p>
  </li>
  <li>
    <p>Select either a <span style="font-weight: bold;">Generate RSA key</span> 
      (if your server supports version 1 of the protocol) or <span
 style="font-weight: bold;">Generate DSA key</span> (for version 2).</p>
  </li>
  <li>
    <p>A public key and private key will be generated. The public key
will be shown in the read-only text area. </p>
  </li>
  <li>
    <p>The next step is to copy the public key to your server. If your
server is running an OpenSSH server than you can use the <span
 style="font-weight: bold;">Export via sftp</span> action. Otherwise
you will have to copy and paste the public key into your remote
~/.ssh/authorized_keys file.</p>
  </li>
  <li>
    <p>Now you have to provide a password for your private key, and
save
it on your computer.</p>
  </li>
</ol>
<p>So now that you have your keypairs generated and installed, the next
time you create a CVS location to the server you shouldn't enter a
password. When the connection is initialized, you will be prompted for
the passphrase for your private key. This is the most secure method of
authentication, as long as your private key is protected with a
passphrase.</p>
<p>
<span style="font-weight: bold;">Note</span>: exporting the public key
is only supported on OpenSSH enabled SSH servers.</p>
<h2>Authentication with Passwords</h2>
<p>
If your server is configured to support password authentication, then
you can simply enter your password when you create a CVS repository
location and that password will be used when authenticating with the
server. This is the simplest authentication method, but isn't as secure
as public keys.<br>
<br>
  <span style="font-weight: bold;">Note</span>: It is not recommended that you 
  save your login passwords using Eclipse. The file that contains the file is 
  not sufficiently protected against intruders and as such you can comprise the 
  security of your system. If your company requires strict security practices 
  then your should use keypair authentication.</p>
<p><img  alt="Related concepts"
 src="../images/ngrelc.png" border="0"><br>
<a href="tasks-92.htm">Creating a CVS repository location</a><br>
<a href="../concepts/concepts-26.htm">Team programming with CVS</a> </p>
<p><img  alt="Related reference"
 src="../images/ngrelr.png" border="0"> <br>
<a href="../reference/ref-47.htm">CVS</a> </p>

</body>
</html>
