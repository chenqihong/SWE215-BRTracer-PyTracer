<?xml version="1.0" encoding="UTF-8" ?> 
<cheatsheet title="Standalone SWT Application">

	<intro 
		href="/org.eclipse.platform.doc.user/reference/ref-cheatsheets.htm">
		<description>
			This cheat sheet will automatically launch wizards,
			perform actions, and guide you through the individual
			steps to create a standalone SWT Java application using
			the Java Development tools. To learn more about using
			cheat sheets click help (?). To start this cheat sheet,
			click the "Click to Begin" button.
		</description>
	</intro>

	<item
		href="/org.eclipse.platform.doc.user/concepts/concepts-4.htm"
		title="Open the Java Perspective">
		<action
			pluginId="org.eclipse.ui.cheatsheets"
			class="org.eclipse.ui.internal.cheatsheets.actions.OpenPerspective"
			param1="org.eclipse.jdt.ui.JavaPerspective"/>
		<description>
			Select Window-&gt;Open Perspective-&gt;Java in the
			menubar at the top of the workbench. This step changes
			the perspective to set up the Eclipse workbench for Java
			development.<br /> 
			You can click the "Click to Perform" button
			to have the "Java" perspective opened automatically.
		</description>
	</item>
	
	<item
		href="/org.eclipse.platform.doc.isv/samples/org.eclipse.swt.examples/doc-html/swt_manual_setup.html"
		title="Add SWT projects to your workspace"
		skip="true">
		<description>
		Since you are creating a standalone SWT application, you need to download 
		the standalone version of SWT. This version of SWT is available on the 
		same download page as the Eclipse SDK.<br /><br />
		1. Download the SWT archive file from eclipse.org web site. Look for the section 
		titled SWT Binary and Source. Do not extract the archive file, just save 
		it to disk.
		<br /><br />
		2. Select "Import..." from the File menu.
		<br /><br />
		3. Select "Existing Projects into Workspace" and click on the Next button.
		<br /><br />
		4. Select "Select archive file:" and use the Browse button to locate the SWT 
		standalone archive you have previously downloaded.
		<br /><br />
		5. Click on the "Finish" button.
		<br />
		</description>
	</item>
	

	<item
		href="/org.eclipse.jdt.doc.user/tasks/tasks-12.htm"
		title="Create a Java project"
		skip="true">
		<action
			pluginId="org.eclipse.jdt.ui"
			class="org.eclipse.jdt.internal.ui.wizards.OpenProjectWizardAction"/>
		<description>
			If you already have a Java project in your workspace that
			you would like to use, you may skip this step by clicking
			the "Click to Skip" button. If not, select File-&gt;New-&gt;Project...
			and choose Java Project in the list. Complete the subsequent
			pages as required.<br />
			The "New Java Project" wizard is automatically
			displayed when you click the "Click to Perform" button.
		</description>
	</item>

	<item
		href="/org.eclipse.jdt.doc.user/tasks/tasks-110.htm"
		title="Configure the Java project"
		skip="true">
		<description>
			1. Select your Java project and from the context menu select Properties. 
			<br /><br />
			2. Select the Java Build Path and then click on the Projects tab and click 
			on the Add button.
			<br /><br />
			3. Place a check beside org.eclipse.swt and click on the OK button twice to 
			close the dialog.
			<br />
		</description>
	</item>

	<item
		href="/org.eclipse.jdt.doc.user/gettingStarted/qs-9.htm" 
		title="Create the HelloWorld class"
		skip="true">
		<action
			pluginId="org.eclipse.jdt.ui"
			class="org.eclipse.jdt.internal.ui.wizards.OpenClassWizardAction"/>
		<description>
			1. Select File-&gt;New-&gt;Class to open the New Java Class
			wizard.
			<br /><br />
			2. In the wizard, fill in the source and package name where 
			you want to create the Java class. 
			<br /><br />
			3. Type in the name of your class, call it "HelloWorld" and
			select to have a "main" method created. The "New Java Class"
			wizard is automatically displayed when you click the
			"Click to Perform" button.
		</description>
	</item>

	<item
		href="/org.eclipse.platform.doc.isv/guide/swt_widgets.htm"
		title="Edit the main method"
		skip="true">
		<description>
			Now that you have your HelloWorld class, in the "public 
			static void main" method, copy and paste the following statements:
			<br /> <br />
				Display display = new Display ();<br /> 
				Shell shell = new Shell(display);<br /> 
				shell.setText("Hello World");<br /> 
				shell.open ();<br /> 
				while (!shell.isDisposed ()) {<br /> 
					if (!display.readAndDispatch ()) display.sleep ();<br /> 
				}<br /> 
				display.dispose ();<br /> 
				<br />
			You will get compile errors. Right click in the Java editor and select 
			Source -> Organize Imports. Save your changes. Click the 
			"Click to Complete" button below when finished.
		</description>
	</item>

	<item
		href="/org.eclipse.jdt.doc.user/gettingStarted/qs-12.htm"
		title="Test your Java Application">
		<description>
			Select your HelloWorld class in the package explorer (the Java tree view on the left of 
			the workbench window in the Java Perspective). Right-click on the class and select 
			Run As -> Java Application. A window will open with the title "Hello World".
		</description>
	</item>

</cheatsheet>
